cat("\n")
cat(paste("name: RedMuffinRectilinear", "\n", sep="\t"))
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# BLUE SHAPES #
cat(paste("name: BlueCircleCurvilinear", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", "\n", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
cat(paste("name: BluePentagonCurvilinear", "\n", sep="\t"))
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
sink('dyanmic_hab_ncamp.ex')
cat(paste("defT:-", "\n", sep="\t"))
cat(paste("name: RedSquareRectilinear", "\n", sep="\t"))
# RED SHAPES #
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
cat(paste("name: RedMuffinRectilinear", "\n", sep="\t"))
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# BLUE SHAPES #
cat(paste("name: BlueCircleCurvilinear", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
cat(paste("name: BluePentagonCurvilinear", "\n", sep="\t"))
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
sink('test_ncamp.ex')
# CONSISTENT
cat(paste("defT:-", "\n", sep="\t"))
cat(paste("name: Consistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# INCONSISTENT
cat(paste("defT:-", "\n", sep="\t"))
cat(paste("name: Inconsistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
sink('test_ncamp.ex')
# CONSISTENT
cat(paste("name: Consistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# INCONSISTENT
cat(paste("name: Inconsistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
sink('test_ncamp.ex')
# CONSISTENT
cat(paste("name: Consistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# INCONSISTENT
cat(paste("name: Inconsistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
sink('test_ncamp_new.ex')
# CONSISTENT
cat(paste("name: Consistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# INCONSISTENT
cat(paste("name: Inconsistent", "\n", sep="\t"))
# INPUT
cat(paste("I:", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
sink('dyanmic_hab_ncamp.ex')
cat(paste("defT:-", "\n", sep="\t"))
cat(paste("name: RedSquareRectilinear", "\n", sep="\t"))
# RED SHAPES #
# INPUT
cat(paste("I:", "\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
cat(paste("name: RedMuffinRectilinear", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# BLUE SHAPES #
cat(paste("name: BlueCircleCurvilinear", "\n", sep="\t"))
# INPUT
cat(paste("I:", "\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
cat(paste("name: BluePentagonCurvilinear", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[4,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
########
# TEST #
########
sink('test_ncamp_new.ex')
# CONSISTENT
cat(paste("name: Consistent", "\n", sep="\t"))
# INPUT
cat(paste("I:","\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# INCONSISTENT
cat(paste("name: Inconsistent", "\n", sep="\t"))
# INPUT
cat(paste("I:","\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Path)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[5,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(path[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(PathOUT)", sep="\t"))
print(path[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
sink('static_hab_ncamp_new.ex')
cat(paste("defT:-", "\n", sep="\t"))
cat(paste("name: RedSquareCross", "\n", sep="\t"))
# INPUT
cat(paste("I:", "\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(feature[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(feature[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
# INPUT
cat(paste("name: BlueCircleHeart", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
cat(paste("(Shape)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Color)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Feature)", sep="\t"))
print(feature[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
cat(paste("(ShapeOUT)", sep="\t"))
print(objects[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(ColorOUT)", sep="\t"))
print(color[2,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(FeatureOUT)", sep="\t"))
print(feature[1,1], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste(";", sep="\t"))
cat("\n")
sink()
