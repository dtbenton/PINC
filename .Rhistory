modified_op_full[2,5]>2
modified_op_full[2,5]>0
modified_op_full[2,5]>=0
ifelse(modified_op_full[2,5]==1 || modified_op_full[2,6]==1 || modified_op_full[2,7]==1 || modified_op_full[2,8]==1,'true','false')
modified_op_full[2,5]
modified_op_full[2,]
ifelse(modified_op_full[2,5]==1 || modified_op_full[2,6]==1 || modified_op_full[2,7]==1 || modified_op_full[2,8]==1,modified_op_full[2,],
'false')
ifelse(modified_op_full[2,5]==1 || modified_op_full[2,6]==1 || modified_op_full[2,7]==1 || modified_op_full[2,8]==1,modified_op_full[2,],
df = modified_op_full[2,])
ifelse(modified_op_full[2,5]==1 || modified_op_full[2,6]==1 || modified_op_full[2,7]==1 || modified_op_full[2,8]==1,modified_op_full[2,],
df[] = modified_op_full[2,])
df[] = modified_op_full[2,]
df
ifelse(modified_op_full[2,5]==1 || modified_op_full[2,6]==1 || modified_op_full[2,7]==1 || modified_op_full[2,8]==1,modified_op_full[2,],
df[]==modified_op_full[2,])
motion = data.frame(x = c('1 0 0 0 0 0 0'),
'0 1 0 0 0 0 0 0',
'0 0 1 0 0 0 0 0',
'0 0 0 1 0 0 0 0',
'0 0 0 0 1 0 0 0',
'0 0 0 0 0 1 0 0',
'0 0 0 0 0 0 1 0',
'0 0 0 0 0 0 0 1')
names(motion) = NULL
occluder = data.frame(x = c('1 1 1 1'))
names(occluder) = NULL
modified_op_full[1,]
ifelse(modified_op_full[1,1]==1|modified_op_full[1,2]==1|modified_op_full[1,3]==1|modified_op_full[1,4]==1, 'TRUE','FALSE')
if(modified_op_full[1,1]==1|modified_op_full[1,2]==1|modified_op_full[1,3]==1|modified_op_full[1,4]==1){
print(modified_op_full[1,])
}
else{
'FALSE'
}
if(modified_op_full[1,1]==1|modified_op_full[1,2]==1|modified_op_full[1,3]==1|modified_op_full[1,4]==1){
print("Non-negative number")
} else {
print("Negative number")
}
if(modified_op_full[1,1]==1|modified_op_full[1,2]==1|modified_op_full[1,3]==1|modified_op_full[1,4]==1){
modified_op_full[1,]
} else {
print("Negative number")
}
nrow(modified_op_full)
df = modified_op_full[1,]
df
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
df = modified_op_full[i,]
} else {
df = NA
}
}
df
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
df[i,] = modified_op_full[i,]
} else {
df[i,] = NA
}
}
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
df[i] = modified_op_full[i,]
} else {
df[i] = NA
}
}
df
fix(df)
df = as.data.frame(matrix(NA, nrow=1000, ncol=8))
if(modified_op_full[1,1]==1|modified_op_full[1,2]==1|modified_op_full[1,3]==1|modified_op_full[1,4]==1){
df[i,] = modified_op_full[1,]
} else {
df[i,] = NA
}
head(df)
df
df = as.data.frame(matrix(NA, nrow=1000, ncol=8))
if(modified_op_full[1,1]==1|modified_op_full[1,2]==1|modified_op_full[1,3]==1|modified_op_full[1,4]==1){
df[i,] = modified_op_full[i,]
} else {
df[i,] = NA
}
df
head(df)
dim(df)
df = as.data.frame(matrix(NA, nrow=1000, ncol=8))
if(modified_op_full[1,1]==1|modified_op_full[1,2]==1|modified_op_full[1,3]==1|modified_op_full[1,4]==1){
compute = modified_op_full[i,]
df[i,] = compute
}
head(df)
df = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
compute = modified_op_full[i,]
df[i,] = compute
} else {
df[i,] = NA
}
}
head(df)
df = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
df[i,] = NA
} else {
df[i,] = modified_op_full[i,]
}
}
head(df)
fix(df)
objects_stim = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,1]==1|modified_op_full[i,2]==1|modified_op_full[i,3]==1|modified_op_full[i,4]==1){
objects_stim[i,] = NA
} else {
objects_stim[i,] = modified_op_full[i,]
}
}
fix(objects_stim)
objects_stim = na.omit(objects_stim)
fix(objects_stim)
people_stim = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
people_stim[i,] = NA
} else {
people_stim[i,] = modified_op_full[i,]
}
}
people_stim = na.omit(people_stim)
fix(people_stim)
people_stim = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
people_stim[i,] = NA
} else {
people_stim[i,] = modified_op_full[i,]
}
}
people_stim = na.omit(people_stim)
names(people_stim) = NULL
fix(people_stim)
names(people_Stim)
names(people_stim)
head(people_stim)
rownames(people_stim) = NULL
objects_stim = na.omit(objects_stim)
names(objects_stim) = NULL
rownames(objects_stim)
rownames(objects_stim) = NULL
rownames(objects_stim)
rownames(objects_stim) = NULL
rownames(objects_stim) = NULL
# TRAINING SET: PEOPLE
pretrain_people = people_stim[1:3,]
# TRAINING SET: OBJECTS
pretrain_objects = objects_stim[1:3,]
# HAB/TESTING SET: PEOPLE
hab_test_people = people_stim[4,]
# HAB/TESTING SET: OBJECTS
hab_test_objects = objects_stim[4,]
hab_test_objects
people_stim
pretrain_people
# TRAINING SET: PEOPLE
pretrain_people = people_stim[1:4,]
# TRAINING SET: OBJECTS
pretrain_objects = objects_stim[1:4,]
# HAB/TESTING SET: PEOPLE
hab_test_people = people_stim[5,]
# HAB/TESTING SET: OBJECTS
hab_test_objects = objects_stim[5,]
pretrain_objects
pretrain_people_1 = people_stim[1:2,]
pretrain_people_2 = people_stim[3:4,]
# TRAINING SET: OBJECTS
pretrain_objects_1 = objects_stim[1:2,]
pretrain_objects_2 = objects_stim[3:4,]
source('C:/Users/detbe/OneDrive/Desktop/Grand Folder/Publications/AIVOE_Paper/PDP model/aivoe_model_script.R', echo=TRUE)
sink('aivoe_pretrain.ex')
for(i in 1:2){
for(j in 1:2){
## People contact events ##
# TIME STEP 1
# INPUT
cat(paste("name: PeopleContactEvent", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(motion[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs_OUT)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Output
print(motion[2,], sep = "\t", quote = FALSE, row.names = FALSE)
# TIME STEP 2
# INPUT
cat(paste("name: PeopleContactEvent", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(motion[2,], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs_OUT)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Output
print(motion[3,], sep = "\t", quote = FALSE, row.names = FALSE)
# TIME STEP 3
# INPUT
cat(paste("name: PeopleContactEvent", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(motion[3,], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs_OUT)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Output
print(motion[4,], sep = "\t", quote = FALSE, row.names = FALSE)
# TIME STEP 4
# INPUT
cat(paste("name: PeopleContactEvent", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(motion[4,], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs_OUT)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Output
print(motion[5,], sep = "\t", quote = FALSE, row.names = FALSE)
# TIME STEP 6
# INPUT
cat(paste("name: PeopleContactEvent", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(motion[5,], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs_OUT)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Output
print(motion[6,], sep = "\t", quote = FALSE, row.names = FALSE)
# TIME STEP 7
# INPUT
cat(paste("name: PeopleContactEvent", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(motion[6,], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs_OUT)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Output
print(motion[7,], sep = "\t", quote = FALSE, row.names = FALSE)
# TIME STEP 8
# INPUT
cat(paste("name: PeopleContactEvent", "\n", sep="\t"))
cat(paste("I:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Input
cat(paste("(Motion_IN)", sep="\t"))
print(motion[7,], sep = "\t", quote = FALSE, row.names = FALSE)
# OUTPUT
cat(paste("T:", "\n", sep="\t"))
# Person 1
cat(paste("(Slot_A_OUT)", sep="\t"))
print(pretrain_people_1[i,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs_OUT)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Person 2
cat(paste("(Slot_B_OUT)", sep="\t"))
print(pretrain_people_1[j,], sep = "\t", quote = FALSE, row.names = FALSE)
cat(paste("(Legs)", sep="\t"))
print(legs[1,], sep = "\t", quote = FALSE, row.names = FALSE)
# Motion Output
print(motion[8,], sep = "\t", quote = FALSE, row.names = FALSE)
}
cat(paste(";", sep="\t"))
cat("\n")
}
motion[2,]
fix(motion)
motion[2,1]
dim(motion)
rm(list=ls())
objects_people_full = combos(8)$binary
modified_op_full = objects_people_full[-c(1:36,163:255),]
# OBJECTS
objects_stim = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,1]==1|modified_op_full[i,2]==1|modified_op_full[i,3]==1|modified_op_full[i,4]==1){
objects_stim[i,] = NA
} else {
objects_stim[i,] = modified_op_full[i,]
}
}
objects_stim = na.omit(objects_stim)
names(objects_stim) = NULL
rownames(objects_stim) = NULL
# PEOPLE
people_stim = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
people_stim[i,] = NA
} else {
people_stim[i,] = modified_op_full[i,]
}
}
people_stim = na.omit(people_stim)
names(people_stim) = NULL
rownames(people_stim) = NULL
# TRAINING SET: PEOPLE
pretrain_people_1 = people_stim[1:2,]
pretrain_people_2 = people_stim[3:4,]
# TRAINING SET: OBJECTS
pretrain_objects_1 = objects_stim[1:2,]
pretrain_objects_2 = objects_stim[3:4,]
# HAB/TESTING SET: PEOPLE
hab_test_people = people_stim[5,]
# HAB/TESTING SET: OBJECTS
hab_test_objects = objects_stim[5,]
##########
## LEGS ##
##########
legs = data.frame(x = c('1 0', '0 1'))
names(legs) = NULL
# HAS LEGS: 1 0
# DOESN'T HAVE LEGS: 0 1
############
## MOTION ##
############
motion = data.frame(x = c('1 0 0 0 0 0 0'),
'0 1 0 0 0 0 0 0',
'0 0 1 0 0 0 0 0',
'0 0 0 1 0 0 0 0',
'0 0 0 0 1 0 0 0',
'0 0 0 0 0 1 0 0',
'0 0 0 0 0 0 1 0',
'0 0 0 0 0 0 0 1')
names(motion) = NULL
motion
legs
is.data.frame(legs)
head(motion)
rm(list=ls())
dim(motion)
objects_people_full = combos(8)$binary
modified_op_full = objects_people_full[-c(1:36,163:255),]
objects_stim = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,1]==1|modified_op_full[i,2]==1|modified_op_full[i,3]==1|modified_op_full[i,4]==1){
objects_stim[i,] = NA
} else {
objects_stim[i,] = modified_op_full[i,]
}
}
objects_stim = na.omit(objects_stim)
names(objects_stim) = NULL
rownames(objects_stim) = NULL
# PEOPLE
people_stim = as.data.frame(matrix(NA, nrow=1000, ncol=8))
for(i in 1:nrow(modified_op_full)){
if(modified_op_full[i,5]==1|modified_op_full[i,6]==1|modified_op_full[i,7]==1|modified_op_full[i,8]==1){
people_stim[i,] = NA
} else {
people_stim[i,] = modified_op_full[i,]
}
}
people_stim = na.omit(people_stim)
names(people_stim) = NULL
rownames(people_stim) = NULL
# TRAINING SET: PEOPLE
pretrain_people_1 = people_stim[1:2,]
pretrain_people_2 = people_stim[3:4,]
# TRAINING SET: OBJECTS
pretrain_objects_1 = objects_stim[1:2,]
pretrain_objects_2 = objects_stim[3:4,]
# HAB/TESTING SET: PEOPLE
hab_test_people = people_stim[5,]
# HAB/TESTING SET: OBJECTS
hab_test_objects = objects_stim[5,]
pretrain_objects_1
pretrain_objects_1[2,1]
